apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "academy.fullname" . }}-redis
  labels:
    app: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "academy.name" . }}-redis
      app: {{ include "academy.name" . }}-redis
      app.kubernetes.io/instance: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "academy.name" . }}-redis
        app: {{ include "academy.name" . }}-redis
        app.kubernetes.io/instance: {{ .Release.Name }}-redis
    spec:
      containers:
        - name: redis-container
          image: "{{ .Values.redis.image.repository }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - 'redis-cli'
                - 'ping'
          readinessProbe:
            exec:
              command:
                - 'redis-cli'
                - 'ping'
          command: ["redis-server"]
          args:
            - "--save"
            - "20"
            - "1"
            - "--loglevel"
            - "warning"
            - "--requirepass"
            - "eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81"
{{- if .Values.globalEnvironments.enabled }}
          env:
{{ toYaml .Values.globalEnvironments.environments | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
